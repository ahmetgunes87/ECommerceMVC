@using ECommerce.Entities.ComplexTypes
@model CustomerItem
@{
    ViewBag.Title = ViewBag.Title;
    Layout = "~/Areas/Admin/Views/Shared/_Layaout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
    <h1 class="h2">@ViewBag.Title</h1>
</div>

@if (TempData["Message"] != null)
{
    var message = (ECommerce.MvcWebUI.Areas.Admin.ViewModels.MessageViewModel)TempData["Message"];
    <div class="alert @message.CssClass alert-dismissible fade show">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>@message.Title</strong> @message.Message <a href="@message.Url">@message.LinkText</a>
    </div>
}

@using (Html.BeginForm("Form", "Customer", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.FirstName)
                @Html.TextBoxFor(c => c.Customer.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Customer.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.LastName)
                @Html.TextBoxFor(c => c.Customer.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Customer.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.IdentificationNumber)
                @Html.TextBoxFor(c => c.Customer.IdentificationNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Customer.IdentificationNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.DateOfBirth)
                @Html.TextBoxFor(c => c.Customer.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(c => c.Customer.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.Email)
                @Html.TextBoxFor(c => c.Customer.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Customer.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.Password)
                @if (Model.Customer != null)
                {
                    @Html.PasswordFor(c => c.Customer.Password, new { @class = "form-control", @value = Model.Customer.Password })
                }
                else
                {
                    @Html.PasswordFor(c => c.Customer.Password, new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(c => c.Customer.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.CityId)
                @Html.DropDownListFor(c => c.Customer.CityId, new SelectList(Model.Cities, "Id", "CityName"), "İl Seçiniz", new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Customer.CityId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(c => c.Customer.DistrictId)
                @Html.DropDownListFor(c => c.Customer.DistrictId, new SelectList(Model.Districts, "Id", "DistrictName"), "İlçe Seçiniz", new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Customer.DistrictId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Address)
        @Html.TextBoxFor(c => c.Customer.Address, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.Address, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Phone)
        @Html.TextBoxFor(c => c.Customer.Phone, new { @class = "form-control" })
    </div>
    <div class="form-group mt-3">
        @Html.HiddenFor(c => c.Customer.Id)
        @Html.HiddenFor(c => c.Customer.DateOfRegistration)
        <button type="submit" class="btn btn-info">Kaydet</button>
    </div>
}
